version: "3"
services:
  python_lambda:
    container_name: "blog_python_lambda"
    build:
        context: "."
        dockerfile: "./docker/python/Dockerfile"
    volumes:
        - ./app:/var/task
    ports:
      - 9000:8080
    networks:
      - blog_node          
  node:
    container_name: blog_node
    build:
      context: "./docker/node"
      dockerfile: "Dockerfile"
    image: node:18.12-alpine
    ports:
      - 3000:3000
      - 3002:3002
      - 6006:6006
    tty: true
    # mongoも入れるので共有を./直下にする
    volumes:
      - .:/app
    entrypoint: >
      sh -c "
        cd /app/mongo && node init/createDB.js && node load_contents.js"
    networks:
      - blog_node
    depends_on:
      - mongo

  mongo:
    container_name: blog_mongo
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ./mongo/init:/docker-entrypoint-initdb.d
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: pass
      TZ: Asia/Tokyo
    networks:
      - blog_node

  mongo-express:
    image: mongo-express
    container_name: blog_mongo_express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: pass
      ME_CONFIG_MONGODB_SERVER: mongo
    depends_on:
      - mongo
    networks:
      - blog_node

networks:
  blog_node:
    driver: "bridge"
